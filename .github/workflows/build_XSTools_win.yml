# workflow syntax           https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# runs-on                   https://github.com/actions/virtual-environments
# setup-python              https://github.com/actions/setup-python
# actions-setup-perl        https://github.com/marketplace/actions/setup-perl-environment
# strawberry Perl 5.12.3.0  https://strawberryperl.com/download/5.12.3.0/strawberry-perl-5.12.3.0-portable.zip
# strawberry Perl 5.32.1.1  https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-32bit-portable.zip
# actions-upload-artifact   https://github.com/actions/upload-artifact
# actions-cache             https://github.com/actions/cache

name: Build Win
on:
  push:
    branches:
  pull_request:

jobs:
  build_XSTools:

    name: XSTools ${{ matrix.os }} (python ${{ matrix.python }}) (perl ${{ matrix.perl }}) ${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-2016
          python: 2.7
          architecture: x86
          perl: 5.12
          strawberry_distr: 'https://strawberryperl.com/download/5.12.3.0/strawberry-perl-5.12.3.0-portable.zip'

        - os: windows-latest
          python: 3
          architecture: x86
          perl: 5.32
          strawberry_distr: 'https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-32bit-portable.zip'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # setup Windows matrix: python 2.7_x86 + strawberry perl 5.12_x86 and python 3_x86 and strawberry perl 5.32_x86
    - name: setup-python ${{ matrix.python }} ${{ matrix.architecture }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.architecture }}

    - name: Удаляем дефолтовый Strawberry и g++
      shell: bash
      run: |
        rm -rf /c/Strawberry/*
        echo "================================================================="
        echo "== remove g++ x64"
        echo "================================================================="
        rm -f /c/ProgramData/Chocolatey/bin/g++.exe

    - name: Check cache Strawberry
      if: runner.os == 'Windows'
      id: cache-strawberry
      uses: actions/cache@v2
      with:
        path: c:\Strawberry
        key: ${{ runner.os }}-strawberry-${{ matrix.perl }}
        restore-keys: ${{ runner.os }}-strawberry-${{ matrix.perl }}

    - name: Replace perl to ${{ matrix.perl }} ${{ matrix.architecture }}
      if: runner.os == 'Windows' && steps.cache-strawberry.outputs.cache-hit != 'true'
      run: |
        echo "================================================================="
        echo "== previous version of Perl:"
        echo "================================================================="
        perl --version
        echo "================================================================="
        echo "== remove the default perl"
        echo "================================================================="
        rm -r C:/Strawberry/*
        echo "================================================================="
        echo "== download strawberry perl ${{ matrix.perl }} ${{ matrix.architecture }}"
        echo "================================================================="
        Invoke-WebRequest ${{ matrix.strawberry_distr }} -OutFile strawberry.zip
        7z.exe x strawberry.zip -o"C:/Strawberry"
        rm strawberry.zip
        echo "================================================================="
        echo "== a new version of Perl:"
        echo "================================================================="
        perl --version

    - name: Environment check
      run: |
        echo "================================================================="
        echo "== python version:"
        echo "================================================================="
        python -V
        echo "================================================================="
        echo "== perl version:"
        echo "================================================================="
        perl --version
        echo "================================================================="
        echo "== Time::HiRes module:"
        echo "================================================================="
        perl -e "use Time::HiRes;"
        if  ($?)  {echo OK}
        echo "================================================================="
        echo "== Compress::Zlib module:"
        echo "================================================================="
        perl -e "use Compress::Zlib;"
        if  ($?)  {echo OK}
        echo "================================================================="
        echo "== check g++ version:"
        echo "================================================================="
        g++ --version
        echo "================================================================="
        echo "== check gmake version:"
        echo "================================================================="
        gmake --version

    - name: ВЕРСИИ g++
      #shell: cmd
      run: |
        g++ --version
        #make --version
        gmake --version
        g++ -v
        #rm -r c:\msys64\*
        g++ --version
        #make --version
        gmake --version
        g++ -v

    - name: Run make XSTools.dll
      run: |
        gmake all
        echo "================================================================="
        ls src\auto\XSTools\XSTools.dll
        ls src\auto\XSTools\NetRedirect.dll

    - name: Making artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}_perl${{ matrix.perl }}${{ matrix.architecture }}
        path: |
          src\auto\XSTools\XSTools.dll
          src\auto\XSTools\NetRedirect.dll

    - name: Save cache OpenKore
      id: cache-OpenKore
      uses: actions/cache@v2
      with:
        path: D:\a\openkore\openkore
        key: ${{ runner.os }}-OpenKore-python${{ matrix.python }}-perl${{ matrix.perl }}-5
        restore-keys: ${{ runner.os }}-OpenKore-python${{ matrix.python }}-perl${{ matrix.perl }}-5

    - name: переменные
      shell: bash
      run: |
        pwd
        echo "== GITHUB_WORKSPACE"
        echo $GITHUB_WORKSPACE
        echo "== pwd"
        pwd
        echo "== ls -l"
        ls -l
        echo "== du -sh openkore"
        du -sh /d/a/openkore/openkore
        echo ================= /d
        ls -l /d
        echo ================= /d/a
        ls -l /d/a
        echo ================= /d/a/_temp
        ls -l /d/a/_temp


  make_test:

    name: make test ${{ matrix.os }} (python ${{ matrix.python }}) (perl ${{ matrix.perl }})
    needs: build_XSTools
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-2016
          python: 2.7
          architecture: x86
          perl: 5.12

        - os: windows-latest
          python: 3
          architecture: x86
          perl: 5.32

    steps:
    - name: ДО perl --version
      run: perl --version

    - name: ДО переменные
      shell: bash
      run: |
        echo "Deploying to production server on branch $GITHUB_REF"
        pwd
        echo "== GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "== ls -l"
        ls -l

    - name: Удаляем дефолтовый Strawberry
      shell: bash
      run: |
        rm -rf /c/Strawberry/*

    - name: Check cache Strawberry
      id: cache-strawberry
      if: runner.os == 'Windows'
      uses: actions/cache@v2
      with:
        path: c:\Strawberry
        key: ${{ runner.os }}-strawberry-${{ matrix.perl }}
        restore-keys: ${{ runner.os }}-strawberry-${{ matrix.perl }}

    - name: cache-strawberry?
      if: runner.os == 'Windows' && steps.cache-strawberry.outputs.cache-hit != 'true'
      run: echo "cache-strawberry2 НЕ найден"

    - name: perl --version
      run: perl --version

    - name: Restore cache OpenKore
      id: cache-OpenKore
      uses: actions/cache@v2
      with:
        path: D:\a\openkore\openkore
        key: ${{ runner.os }}-OpenKore-python${{ matrix.python }}-perl${{ matrix.perl }}-5
        restore-keys: ${{ runner.os }}-OpenKore-python${{ matrix.python }}-perl${{ matrix.perl }}-5

    - name: переменные
      shell: bash
      run: |
        pwd
        echo "== GITHUB_WORKSPACE"
        echo $GITHUB_WORKSPACE
        echo "== pwd"
        pwd
        echo "== ls -l"
        ls -l
        echo "== du -sh openkore"
        du -sh /d/a/openkore/openkore
        echo ================= /d
        ls -l /d
        echo ================= /d/a
        ls -l /d/a
        echo ================= /d/a/_temp
        ls -l /d/a/_temp

    - name: Run Tests
      run: make test